// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tour_De_France.Models;

namespace Tour_De_France.Migrations
{
    [DbContext(typeof(EventDbContext))]
    [Migration("20220524141717_Tour_De_France")]
    partial class Tour_De_France
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tour_De_France.Models.Deltager", b =>
                {
                    b.Property<int>("DeltagerId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mobil")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("VIP")
                        .HasColumnType("bit");

                    b.HasKey("DeltagerId");

                    b.ToTable("Deltagere");
                });

            modelBuilder.Entity("Tour_De_France.Models.Event", b =>
                {
                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("EventId");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("Tour_De_France.Models.EventOrder", b =>
                {
                    b.Property<int>("EventOrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("DeltagerId")
                        .HasColumnType("int");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.HasKey("EventOrderId");

                    b.HasIndex("DeltagerId");

                    b.HasIndex("EventId");

                    b.ToTable("EventOrders");
                });

            modelBuilder.Entity("Tour_De_France.Models.Musiktelt", b =>
                {
                    b.Property<int>("Mid")
                        .HasColumnType("int");

                    b.Property<string>("Band")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Drinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Mid");

                    b.ToTable("Musiktelte");
                });

            modelBuilder.Entity("Tour_De_France.Models.Order", b =>
                {
                    b.Property<int>("OrderId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<int>("DeltagerId")
                        .HasColumnType("int");

                    b.Property<int>("VIPId")
                        .HasColumnType("int");

                    b.HasKey("OrderId");

                    b.HasIndex("DeltagerId");

                    b.HasIndex("VIPId");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("Tour_De_France.Models.Parking_plads", b =>
                {
                    b.Property<int>("ppId")
                        .HasColumnType("int");

                    b.Property<int>("Count")
                        .HasColumnType("int");

                    b.Property<bool>("Free")
                        .HasColumnType("bit");

                    b.HasKey("ppId");

                    b.ToTable("ParkingPlads");
                });

            modelBuilder.Entity("Tour_De_France.Models.Spisetelt", b =>
                {
                    b.Property<int>("Sid")
                        .HasColumnType("int");

                    b.Property<string>("Drinks")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Food")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("Sid");

                    b.ToTable("Spisetelte");
                });

            modelBuilder.Entity("Tour_De_France.Models.Togafgang", b =>
                {
                    b.Property<int>("TogafgangId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Arrival")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Departure")
                        .HasColumnType("datetime2");

                    b.HasKey("TogafgangId");

                    b.ToTable("Togafgange");
                });

            modelBuilder.Entity("Tour_De_France.Models.Tribune", b =>
                {
                    b.Property<int>("TribuneId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Time")
                        .HasColumnType("datetime2");

                    b.HasKey("TribuneId");

                    b.ToTable("Tribuner");
                });

            modelBuilder.Entity("Tour_De_France.Models.VIP", b =>
                {
                    b.Property<int>("VIPId")
                        .HasColumnType("int");

                    b.Property<bool>("Champagne")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<string>("Titel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("VIPId");

                    b.ToTable("VIPs");
                });

            modelBuilder.Entity("Tour_De_France.Models.EventOrder", b =>
                {
                    b.HasOne("Tour_De_France.Models.Deltager", "Deltager")
                        .WithMany("EventOrders")
                        .HasForeignKey("DeltagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tour_De_France.Models.Event", "Event")
                        .WithMany()
                        .HasForeignKey("EventId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Tour_De_France.Models.Order", b =>
                {
                    b.HasOne("Tour_De_France.Models.Deltager", "Deltager")
                        .WithMany("Orders")
                        .HasForeignKey("DeltagerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Tour_De_France.Models.VIP", "VIP")
                        .WithMany()
                        .HasForeignKey("VIPId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
